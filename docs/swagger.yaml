basePath: /api/v1
definitions:
  authentications.AuthIn:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  authentications.AuthOut:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        type: string
      token:
        $ref: '#/definitions/authentications.Token'
    type: object
  authentications.InitUserPasswordIn:
    properties:
      password:
        type: string
      user_id:
        type: string
    required:
    - password
    - user_id
    type: object
  authentications.RefreshTokenOut:
    properties:
      id:
        type: string
      token:
        $ref: '#/definitions/authentications.Token'
    type: object
  authentications.ResetPasswordIn:
    properties:
      new_password:
        type: string
      old_password:
        type: string
    required:
    - new_password
    - old_password
    type: object
  authentications.Token:
    properties:
      access_token:
        type: string
      expires_at:
        type: string
      refresh_token:
        type: string
    type: object
  model.User:
    properties:
      create_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: string
      is_available:
        type: boolean
      is_visible:
        type: boolean
      name:
        type: string
      password:
        type: string
      role_id:
        type: string
      sername:
        type: string
      updated_at:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - role_id
    - sername
    - username
    type: object
  users.UserIn:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      sername:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - sername
    - username
    type: object
  users.UserOut:
    properties:
      create_at:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
      role:
        type: string
      sername:
        type: string
      updated_at:
        type: string
      username:
        type: string
    required:
    - email
    - id
    - name
    - role
    - sername
    - username
    type: object
  utils.HttpResponse-any:
    properties:
      code_error:
        type: integer
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  utils.HttpResponse-authentications_AuthOut:
    properties:
      code_error:
        type: integer
      data:
        $ref: '#/definitions/authentications.AuthOut'
      message:
        type: string
      success:
        type: boolean
    type: object
  utils.HttpResponse-authentications_RefreshTokenOut:
    properties:
      code_error:
        type: integer
      data:
        $ref: '#/definitions/authentications.RefreshTokenOut'
      message:
        type: string
      success:
        type: boolean
    type: object
  utils.HttpResponse-users_UserOut:
    properties:
      code_error:
        type: integer
      data:
        $ref: '#/definitions/users.UserOut'
      message:
        type: string
      success:
        type: boolean
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Service d'authentification.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: CMagic Auth
  version: 1.0.0
paths:
  /auth/forget_password:
    put:
      description: Voir le profil d'un utilisateur
      produces:
      - application/json
      responses: {}
      summary: Voir le profil d'un utilisateur
      tags:
      - Authentications
  /auth/init_password:
    put:
      description: Initialisation du mot de passe utilisateur
      parameters:
      - description: Body data
        in: body
        name: init_password
        required: true
        schema:
          $ref: '#/definitions/authentications.InitUserPasswordIn'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/utils.HttpResponse-any'
      summary: Initialisation du mot de passe utilisateur
      tags:
      - Authentications
  /auth/login:
    post:
      description: Authentifier un utlisateur
      parameters:
      - description: Détails de l'utilisateur
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/authentications.AuthIn'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.HttpResponse-authentications_AuthOut'
      summary: Authentifier un utlisateur
      tags:
      - Authentications
  /auth/me:
    get:
      description: Voir le profil d'un utilisateur
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.HttpResponse-users_UserOut'
      summary: Voir le profil d'un utilisateur
      tags:
      - Authentications
  /auth/refresh_token:
    put:
      description: Rafraichir le token
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/utils.HttpResponse-authentications_RefreshTokenOut'
      summary: Rafraichir le token
      tags:
      - Authentications
  /auth/reset_password:
    put:
      description: Changer de mot de passe
      parameters:
      - description: Détails de l'utilisateur
        in: body
        name: reset_password
        required: true
        schema:
          $ref: '#/definitions/authentications.ResetPasswordIn'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/utils.HttpResponse-authentications_AuthOut'
      summary: Changer de mot de passe
      tags:
      - Authentications
  /users:
    get:
      description: Récupère la liste de tous les utilisateurs.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
      summary: Récupère tous les utilisateurs
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Crée un nouvel utilisateur avec les détails fournis.
      parameters:
      - description: Body data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.UserIn'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/utils.HttpResponse-users_UserOut'
      summary: Crée un nouvel utilisateur
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Met à jour un utilisateur en fonction de son ID avec les détails
        fournis.
      parameters:
      - description: Détails de l'utilisateur à mettre à jour
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.UserIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.HttpResponse-users_UserOut'
      summary: Met à jour un utilisateur
      tags:
      - Users
  /users/{id}:
    delete:
      description: Supprime un utilisateur en fonction de son ID.
      parameters:
      - description: ID de l'utilisateur
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: Aucun contenu
      summary: Supprime un utilisateur
      tags:
      - Users
    get:
      description: Récupère un utilisateur en fonction de son ID.
      parameters:
      - description: ID de l'utilisateur
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
      summary: Récupère un utilisateur par ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Met à jour un utilisateur en fonction de son ID avec les détails
        fournis.
      parameters:
      - description: ID de l'utilisateur
        in: path
        name: id
        required: true
        type: string
      - description: Body data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.UserIn'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.HttpResponse-users_UserOut'
      summary: Met à jour un utilisateur
      tags:
      - Users
  /users/{id}/assign-role/{role}:
    post:
      description: Assigner un rôle spécifié à un utilisateur en fonction de son ID.
      parameters:
      - description: ID de l'utilisateur
        in: path
        name: id
        required: true
        type: integer
      - description: Rôle à assigner
        in: path
        name: role
        required: true
        type: string
      responses:
        "204":
          description: Aucun contenu
      summary: Assigner un rôle à un utilisateur
      tags:
      - Users
  /users/{id}/remove-role/{role}:
    post:
      description: Supprimer un rôle spécifié d'un utilisateur en fonction de son
        ID.
      parameters:
      - description: ID de l'utilisateur
        in: path
        name: id
        required: true
        type: integer
      - description: Rôle à supprimer
        in: path
        name: role
        required: true
        type: string
      responses:
        "204":
          description: Aucun contenu
      summary: Supprimer un rôle d'un utilisateur
      tags:
      - Users
  /users/profile:
    get:
      description: view user profile info.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.HttpResponse-users_UserOut'
      summary: User profile
      tags:
      - Users
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
